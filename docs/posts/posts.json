[
  {
    "path": "posts/2022-04-13-the-power-of-the-tidyverse-manipulating-data/",
    "title": "The power of the tidyverse: manipulating data",
    "description": "In this post I will show you how to use the basic tools from tidyverse. This tools are useful to deal with a whole sort of data.",
    "author": [
      {
        "name": "Guilherme Bastos Gomes",
        "url": "https://gbastosg.github.io/guilhermesportfolio/"
      }
    ],
    "date": "2022-04-13",
    "categories": [],
    "contents": "\r\nHello! In this post I will show you how to use the basic verbs of the tidyverse:\r\nselect()\r\narrange()\r\nfilter()\r\nmutate()\r\nAll these verbs are also great functions to deal with data from the real world, but since gathering this data can be very time useful we will use a built in dataset from R.\r\nLet’s have a look in the Iris dataset which gives the measurements in centimeters of the variables sepal length, sepal width, petal length and petal width, respectively, for 50 flowers from each of 3 species of iris. The species are Iris setosa, Iris versicolor, and Iris virginica.\r\nAnd of course since we are dealing with the tidyverse we have to call it:\r\nlibrary(tidyverse)\r\nwe can call it and have a look: iris or just a part of it: head(iris) or just a glimpse for those who love stats: glimpse(iris)\r\nFirst of all let’s start with select and since we are using a tidyverse way of thinking, we are going to start using pipes also known as %>% or |>, depends on which you prefer to write.\r\nSo, to select a sort of columns you wish you can:\r\niris %>% #here we are calling the data\r\nselect(Sepal.Length, Species) #here we are calling the function and  choosing two columns `Sepal.Length` and `Species`\r\nNote the pipe “%>%”, that means that the output of one function will be the input of the next one, and the first pipe just includes the iris data set into the next function select(Sepal.Length, Species)\r\nPretty easy, right?\r\nNow you should have a smaller data set, only the selected columns from iris to work with, if you want to check it, just call the same script again, but using the head() function to see only the first 10 lines:\r\niris %>%\r\nselect(Sepal.Length, Species) %>%\r\nhead()\r\nNow you should have something like this:\r\nSepal.Length\r\nSpecies\r\n5.1\r\nsetosa\r\n4.9\r\nsetosa\r\n4.7\r\nsetosa\r\n4.6\r\nsetosa\r\n5.0\r\nsetosa\r\n5.4\r\nsetosa\r\nTo make our work even easier, we should create an object with our smaller iris dataframe:\r\nselected_iris <- iris %>%\r\nselect(Sepal.Length, Species) %>%\r\nhead()\r\nSuppose you want now to quick check the distribution of Sepal Lengths, we can either call the view() function inside RStudio, or use the arrange() function, like this:\r\narrange(selected_iris) %>%\r\nhead()\r\nYou should see something like this:\r\nSepal.Length\r\nSpecies\r\n4.3\r\nsetosa\r\n4.4\r\nsetosa\r\n4.4\r\nsetosa\r\n4.4\r\nsetosa\r\n4.5\r\nsetosa\r\n4.6\r\nsetosa\r\nYou will notice that the dataframeis now ordered from the lowest to the highest values of Sepal.Length. But what if we wanted to arrange in a descending order? Then we should just use the function desc() inside of our arrange() calling:\r\narrange(desc(selected_iris)) %>%\r\nhead()\r\nNow you will have:\r\nSepal.Length\r\nSpecies\r\n7.9\r\nvirginica\r\n7.7\r\nvirginica\r\n7.7\r\nvirginica\r\n7.7\r\nvirginica\r\n7.7\r\nvirginica\r\n7.6\r\nvirginica\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-04-16T07:02:50-03:00",
    "input_file": "the-power-of-the-tidyverse-manipulating-data.knit.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to My Portfolio!",
    "description": "This is where I am going to post everything I did using R and other programming languages!",
    "author": [
      {
        "name": "Guilherme Bastos Gomes",
        "url": "https://gbastosg.github.io/guilhermesportfolio/"
      }
    ],
    "date": "2022-04-11",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-04-11T05:53:57-03:00",
    "input_file": "welcome.knit.md"
  },
  {
    "path": "posts/2022-04-11-testing/",
    "title": "Testing!",
    "description": "This is my first post, it is a test so there's nothing in it besides text and\nstuff. You know what, I am going to write something... Nah, changed my mind,\nlet's just keep this a test, sorry.",
    "author": [
      {
        "name": "Guilherme Bastos Gomes",
        "url": "https://gbastosg.github.io/guilhermesportfolio/"
      }
    ],
    "date": "2022-04-11",
    "categories": [],
    "contents": "\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-04-11T05:54:41-03:00",
    "input_file": "testing.knit.md"
  }
]
